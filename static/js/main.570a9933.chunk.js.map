{"version":3,"sources":["components/Header/Header.tsx","components/Version/Version.tsx","components/Setting/Setting.tsx","components/PuppyScreen/PuppyConsole.tsx","components/PuppyScreen/PuppyScreen.tsx","components/Editor/Editor.tsx","components/Course/Course.tsx","logic/course.ts","logic/puppy.ts","logic/koinu.ts","logic/editor.ts","logic/setting.ts","logic/autoplay.ts","App.tsx","index.tsx"],"names":["Header","props","react_default","a","createElement","className","id","Navbar","bg","variant","expand","Brand","onClick","setIsShowVersion","src","width","height","Nav","NavDropdown","title","Object","keys","courses","map","course_path","course","concat","drop","key","list","page","i","Item","href","Button","setIsShowSetting","react_fontawesome_index_es","icon","faCog","Version","Fragment","Modal","show","onHide","setShow","closeButton","Title","Body","style","whiteSpace","puppy_version","target","Setting","Form","onSubmit","e","submitValue","value","preventDefault","Group","controlId","FormControl","onChange","setValue","Line","elements","css","color","backgroundColor","create_span","PuppyConsole","PuppyConsole_Line","PuppyFooter","play","faPlay","fullscreen","faExpand","setIsCourseVisible","isCourseVisible","faBookOpen","faBook","paddingRight","paddingLeft","setIsConsoleVisible","isConsoleVisible","size","faTerminal","verticalAlign","PuppyScreen","_useState","useState","_useState2","slicedToArray","resizeTimer","setResizeTimer","useEffect","addEventListener","clearTimeout","setTimeout","w","document","getElementById","clientWidth","h","clientHeight","setSize","visibility","components_PuppyScreen_PuppyConsole","consoleValue","PuppyScreen_PuppyFooter","EditorFooter","fontPlus","faPlus","fontMinus","faMinus","Editor","setHeight","_useState3","_useState4","setWidth","_useState5","_useState6","editorOptions","selectOnLineNumbers","fontSize","wordWrap","lightbulb","enabled","lib_default","language","theme","source","options","editorDidMount","Editor_EditorFooter","Course","length","fetchContent","coursePath","path","fetchSample","then","visible","Card","Row","Col","xs","faChevronLeft","faChevronRight","dangerouslySetInnerHTML","__html","marked","content","GITHUB_API_REPO","headers","Headers","Origin","process","fetchFileFromGitHub","fetch","res","ok","json","Error","status","toString","download_url","fetchSettingFromGitHub","catch","msg","console","log","fetchSampleFromGitHub","setSource","sample","window","sessionStorage","getItem","Promise","resolve","text","statusText","setItem","resize","puppy","canvas","render","callKoinu","NLPSymbol","method","editor","defineTheme","base","inherit","rules","colors","editor.background","languages","registerCodeActionProvider","provideCodeActions","model","range","context","_token","codeActions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","markers","Symbol","iterator","next","done","mk","code","push","edit","edits","resource","uri","kind","isPreferred","err","return","all","registerCompletionItemProvider","provideCompletionItems","position","_context","wordInfo","getWordUntilPosition","Range","lineNumber","startColumn","endColumn","suggestions","label","CompletionItemKind","Function","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","Constructor","Property","register","setMonarchTokensProvider","tokenizer","root","codeEditor","decos","setDecos","codeChangeTimer","setCodeChangeTimer","_event","_decos","getModel","findMatches","match","inlineClassName","deltaDecorations","checkZenkaku","load","setFontSize","Math","max","setModelMarkers","type2severity","type","MarkerSeverity","Info","Warning","Hint","setErrorLogs","logs","severity","startLineNumber","row","col","endLineNumber","len","subject","message","messagefy","ErrorLogs2Markers","submitCommand","cmd","os","splited","split","command","args","slice","exec","AutoPlayer","classCallCheck","this","isRun","createClass","func","_this","run","App","setEditor","setContent","qs","hash","parseInt","substr","setCourses","isShowVersion","_useState7","_useState8","setCourse","_useState9","_useState10","courseContent","setCourseContent","_useState11","_useState12","setPuppy","_useState13","_useState14","_useState15","_useState16","editorTheme","setEditorTheme","_useState17","_useState18","editorFontSize","setEditorFontSize","_useState19","_useState20","setCodeEditor","_useState21","_useState22","_useState23","_useState24","isShowSetting","_useState25","_useState26","settingCommand","setSettingCommand","_useState27","_useState28","_useState29","_useState30","setConsoleValue","_useState31","_useState32","isAutoPlay","setIsAutoPlay","_useState33","_useState34","isDebug","setIsDebug","_useState35","_useState36","autoPlayer","_useState37","_useState38","setHighLight","_useState39","_useState40","autoPlayFunc","location","setSelection","puppyplay","contents","fetchSettingPromises","fetchCoursesFromGitHub","puppyElement","PuppyOS","newPuppyVM","startLineNum","endLineNum","hl","isWholeLine","setCodeHighLight","action","resetCodeHighLight","settingAction","appendLine","stringElements","prev","oldValue","initConsole","AUTO_PLAY","DEBUG","getenv","Container","components_Header_Header","components_Version_Version","components_Setting_Setting","components_Course_Course","components_PuppyScreen_PuppyScreen","components_Editor_Editor","ReactDOM","react_router_dom","react_router","src_App_0","query","search","reduce","obj","v","pair"],"mappings":"6dA6DeA,UA/CuB,SAACC,GACrC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,GAAG,gBACzBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,MACxCR,EAAAC,EAAAC,cAACG,EAAA,EAAOI,MAAR,CAAcC,QAAS,kBAAMX,EAAMY,kBAAiB,KAClDX,EAAAC,EAAAC,cAAA,OACEU,IAAI,mBACJC,MAAM,KACNC,OAAO,KACPX,UAAU,6BAEX,UAEHH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKZ,UAAU,WACbH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAaC,MAAO,aAAcb,GAAG,wBAClCc,OAAOC,KAAKpB,EAAMqB,SAASC,IAAI,SAAAC,GAC9B,IAAMC,EAASxB,EAAMqB,QAAQE,GAC7B,OACEtB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,MAAOM,EAAON,MACdb,GAAE,sBAAAoB,OAAwBD,EAAON,OACjCQ,KAAK,QACLC,IAAKH,EAAON,OAEXM,EAAOI,KAAKN,IACX,SAACO,EAAuCC,GAAxC,OACE7B,EAAAC,EAAAC,cAACc,EAAA,EAAYc,KAAb,CACEC,KAAI,WAAAP,OAAaF,EAAb,KAAAE,OAA4BK,GAChCH,IAAKG,GAEJD,EAAKX,cAStBjB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQ7B,UAAU,mBAAmBO,QAASX,EAAMkC,kBAClDjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAMC,6BCZlBC,EAjCyB,SAACtC,GACvC,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOC,KAAMzC,EAAMyC,KAAMC,OAAQ,kBAAM1C,EAAM2C,SAAQ,KACnD1C,EAAAC,EAAAC,cAACqC,EAAA,EAAMzC,OAAP,CAAc6C,aAAW,GACvB3C,EAAAC,EAAAC,cAACqC,EAAA,EAAMK,MAAP,eAEF5C,EAAAC,EAAAC,cAACqC,EAAA,EAAMM,KAAP,CAAYC,MAAO,CAAEC,WAAY,aAC/B/C,EAAAC,EAAAC,cAAA,qBAAAsB,OAAgBwB,4BAChBhD,EAAAC,EAAAC,cAAA,SAAI,0CACJF,EAAAC,EAAAC,cAAA,uEAC8D,IAC5DF,EAAAC,EAAAC,cAAA,KAAG6B,KAAK,wCAAwCkB,OAAO,SACpD,UAHL,2BCmBKC,UA1ByB,SAACnD,GASvC,OACEC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOC,KAAMzC,EAAMyC,KAAMC,OAAQ,kBAAM1C,EAAM2C,SAAQ,KACnD1C,EAAAC,EAAAC,cAACqC,EAAA,EAAMzC,OAAP,CAAc6C,aAAW,GACvB3C,EAAAC,EAAAC,cAACqC,EAAA,EAAMK,MAAP,uBAEF5C,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAM/C,GAAG,gBAAgBgD,SAbZ,SAACC,GAMhB,OALAtD,EAAMuD,YAAYvD,EAAMwD,OACxBxD,EAAM2C,SAAQ,GACVW,EAAEG,gBACJH,EAAEG,kBAEG,IAQHxD,EAAAC,EAAAC,cAACiD,EAAA,EAAKM,MAAN,CAAYC,UAAU,eACpB1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEJ,MAAOxD,EAAMwD,MACbK,SAAU,SAAAP,GAAC,OAAItD,EAAM8D,SAASR,EAAEJ,OAAOM,eCtB7CO,iBAA4B,SAAC/D,GAejC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,YAAOH,EAAMgE,SAAS1C,IAAI,SAACgC,EAAGxB,GAAJ,OAhBV,SAACwB,EAAkBxB,GACrC,IAAMmC,EAAqB,GAO3B,OANIX,EAAEY,QACJD,EAAIC,MAAQZ,EAAEY,OAEZZ,EAAEa,kBACJF,EAAIE,gBAAkBb,EAAEa,iBAGxBlE,EAAAC,EAAAC,cAAA,QAAMwB,IAAKG,EAAGiB,MAAOkB,GAClBX,EAAEE,OAM+BY,CAAYd,EAAGxB,SAqB1CuC,EAZmC,SAChDrE,GAEA,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZJ,EAAMwD,MAAMlC,IAAI,SAAC0C,EAAUlC,GAAX,OACf7B,EAAAC,EAAAC,cAACmE,EAAD,CAAM3C,IAAKG,EAAGkC,SAAUA,QCjB1BO,EAA0C,SAACvE,GAC/C,OACEC,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBACNJ,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQ7B,UAAU,mBAAmBO,QAAS,kBAAMX,EAAMwE,SACxDvE,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAMqC,MACtB,SAEHxE,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQ7B,UAAU,mBAAmBO,QAAS,kBAAMX,EAAM0E,eACxDzE,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAMuC,OAEzB1E,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACE7B,UAAU,mBACVO,QAAS,kBAAMX,EAAM4E,oBAAoB5E,EAAM6E,mBAE/C5E,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAMpC,EAAM6E,gBAAkBC,IAAaC,OAE9D9E,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACE7B,UAAU,mBACV2C,MAAO,CAAEiC,aAAc,MAAOC,YAAa,SAC3CtE,QAAS,kBAAMX,EAAMkF,qBAAqBlF,EAAMmF,oBAEhDlF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEiD,KAAM,KACNhD,KAAMiD,IACNtC,MAAO,CAAEuC,cAAe,YAsDnBC,EA1CiC,SAACvF,GAA4B,IAAAwF,EACrCC,mBAAS,MAD4BC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAqE,EAAA,GACpEI,EADoEF,EAAA,GACvDG,EADuDH,EAAA,GAkB3E,OAhBAI,oBAAU,WACRC,iBAAiB,SAAU,WACrBH,IACFI,aAAaJ,GACbC,EAAe,OAEjBA,EACEI,WAAW,WACT,IAAMC,EAAIC,SAASC,eAAe,gBAAiBC,YAC7CC,EAAIH,SAASC,eAAe,gBAAiBG,aACnDvG,EAAMwG,QAAQN,EAAGI,IAChB,SAGN,CAACtG,EAAMwG,UAGRvG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACEtC,EAAAC,EAAAC,cAAA,OACEE,GAAG,eACHM,QAAS,kBAAMX,EAAM4E,oBAAmB,MAE1C3E,EAAAC,EAAAC,cAAA,OACEE,GAAG,gBACH0C,MAAO,CAAE0D,WAAYzG,EAAMmF,iBAAmB,UAAY,WAE1DlF,EAAAC,EAAAC,cAACuG,EAAD,CAAclD,MAAOxD,EAAM2G,gBAE7B1G,EAAAC,EAAAC,cAACyG,EAAD,CACE/B,gBAAiB7E,EAAM6E,gBACvBM,iBAAkBnF,EAAMmF,iBACxBP,mBAAoB5E,EAAM4E,mBAC1BM,oBAAqBlF,EAAMkF,oBAC3BV,KAAMxE,EAAMwE,KACZE,WAAY1E,EAAM0E,iCCjFpBmC,UAA4C,SAChD7G,GAEA,OACEC,EAAAC,EAAAC,cAAA,OAAKE,GAAG,iBACNJ,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQ7B,UAAU,mBAAmBO,QAASX,EAAM8G,UAClD7G,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAM2E,OAEzB9G,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQ7B,UAAU,mBAAmBO,QAASX,EAAMgH,WAClD/G,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAM6E,UA6DhBC,EA7CuB,SAAClH,GAAuB,IAAAwF,EAChCC,mBAAS,KADuBC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAqE,EAAA,GACrDzE,EADqD2E,EAAA,GAC7CyB,EAD6CzB,EAAA,GAAA0B,EAElC3B,mBAAS,KAFyB4B,EAAAlG,OAAAwE,EAAA,EAAAxE,CAAAiG,EAAA,GAErDtG,EAFqDuG,EAAA,GAE9CC,EAF8CD,EAAA,GAAAE,EAGtB9B,mBAAS,MAHa+B,EAAArG,OAAAwE,EAAA,EAAAxE,CAAAoG,EAAA,GAGrD3B,EAHqD4B,EAAA,GAGxC3B,EAHwC2B,EAAA,GAItDC,EAAgB,CACpBC,qBAAqB,EACrBC,SAAU3H,EAAM2H,SAChBC,SAAU,KACVC,UAAW,CAAEC,SAAS,IAoBxB,OAjBAhC,oBAAU,WACRC,iBAAiB,SAAU,WACrBH,EACFI,aAAaJ,GAGfC,EACEI,WAAW,WACTkB,EAAUhB,SAASC,eAAe,aAAcG,cAChDe,EAASnB,SAASC,eAAe,aAAcC,cAC9C,QAGPc,EAAUhB,SAASC,eAAe,aAAcG,cAChDe,EAASnB,SAASC,eAAe,aAAcC,cAC9C,IAGDpG,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBACNJ,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACEY,MAAOA,EACPC,OAAQA,EACRiH,SAAU,SACVC,MAAOjI,EAAMiI,MACbzE,MAAOxD,EAAMkI,OACbC,QAASV,EACT5D,SAAU7D,EAAM6D,SAChBuE,eAAgBpI,EAAMoI,iBAExBnI,EAAAC,EAAAC,cAACkI,EAAD,CAAcvB,SAAU9G,EAAM8G,SAAUE,UAAWhH,EAAMgH,gCCQhDsB,iBA/DuB,SAACtI,GAYrC,OAXA8F,oBAAU,WACyB,IAA7B9F,EAAMwB,OAAOI,KAAK2G,SACpBvI,EAAMwI,aAAaxI,EAAMyI,WAAYzI,EAAMwB,OAAOI,KAAK5B,EAAM6B,MAAM6G,MACnE1I,EACG2I,YAAY3I,EAAMyI,WAAYzI,EAAMwB,OAAOI,KAAK5B,EAAM6B,MAAM6G,MAC5DE,KAAK,SAACV,GACLlI,EAAMwE,KAAK0D,EAAXlI,OAGL,CAACA,EAAM6B,KAAM7B,EAAMyI,WAAYzI,EAAMwB,SAGtCvB,EAAAC,EAAAC,cAAA,OACEE,GAAG,eACH0C,MAAO,CAAE0D,WAAYzG,EAAM6I,QAAU,UAAY,WAEjD5I,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAM1I,UAAU,cACdH,EAAAC,EAAAC,cAAC2I,EAAA,EAAK/I,OAAN,CAAaK,UAAU,iBASrBH,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACE9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAK5I,UAAU,mBAAmB6I,GAAI,GACnCjJ,EAAMwB,OAAOI,MACe,IAA7B5B,EAAMwB,OAAOI,KAAK2G,QACH,IAAfvI,EAAM6B,KACJ5B,EAAAC,EAAAC,cAAA,KAAG6B,KAAI,IAAAP,OAAMzB,EAAM6B,KAAO,IACxB5B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAM8G,MADzB,IAAAzH,OAEOzB,EAAMwB,OAAOI,KAAK5B,EAAM6B,KAAO,GAAGX,QAEvC,MAENjB,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAK5I,UAAU,oBAAoB6I,GAAI,GACpCjJ,EAAMwB,OAAOI,MACe,IAA7B5B,EAAMwB,OAAOI,KAAK2G,QAClBvI,EAAM6B,OAAS7B,EAAMwB,OAAOI,KAAK2G,OAAS,EACxCtI,EAAAC,EAAAC,cAAA,KAAG6B,KAAI,IAAAP,OAAMzB,EAAM6B,KAAO,IAA1B,GAAAJ,OACMzB,EAAMwB,OAAOI,KAAK5B,EAAM6B,KAAO,GAAGX,MADxC,KAEEjB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAM+G,OAEvB,QAIVlJ,EAAAC,EAAAC,cAAC2I,EAAA,EAAKhG,KAAN,CAAW1C,UAAU,eACnBH,EAAAC,EAAAC,cAAA,OACEC,UAAU,gBACVgJ,wBAAyB,CACvBC,OAAQC,EAAOtJ,EAAMuJ,iBCxD7BC,EACJ,+DAEIC,EAAU,IAAIC,QAAQ,CAC1BC,OAAQC,gBAGJC,EAAsB,SAACnB,GAAD,OAC1BoB,MAAMpB,EAAM,CAAEe,YACXb,KAAK,SAACmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEb,MAAMC,MAAMH,EAAII,OAAOC,cAExBxB,KAAK,SAACW,GACL,GAAIA,EAAQc,aACV,OAAOP,MAAMP,EAAQc,aAAc,CAAEZ,YAEvC,MAAMS,MAAK,aAAAzI,OAAciH,EAAd,qBAGX4B,EAAyB,SAAC5B,EAAcrH,GAAf,OAC7BwI,EAAmB,GAAApI,OAAI+H,GAAJ/H,OAAsBiH,EAAtB,kBAChBE,KAAK,SAACmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,SAGdrB,KAAK,SAACpH,GACLH,EAAQqH,GAAQlH,IAEjB+I,MAAM,SAACC,GACNC,QAAQC,IAAR,OAAAjJ,OAAmB+I,OA+CZG,EAAwB,SAACC,GAAD,OAAyC,SAC5EnC,EACAC,GAEA,IAAMmC,EAASC,OAAOC,eAAeC,QAAtB,GAAAvJ,OACVgH,GADUhH,OACGiH,EADH,eAGf,OAAImC,GACFD,EAAUC,GACHI,QAAQC,QAAQL,IAElBhB,EAAmB,GAAApI,OAAI+H,GAAJ/H,OAAsBgH,GAAtBhH,OAAmCiH,EAAnC,eACvBE,KAAK,SAACmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIoB,OAEb,MAAM,IAAIjB,MAAMH,EAAIqB,cAErBxC,KAAK,SAACiC,GAGL,OAFAD,EAAUC,GACVC,OAAOC,eAAeM,QAAtB,GAAA5J,OAAiCgH,GAAjChH,OAA8CiH,EAA9C,cAAgEmC,GACzDA,eChHAS,EAAS,SAACC,GAAD,OAAyB,SAACrF,EAAWI,GACzD,OAAIiF,EACKA,EAAMD,OAAOpF,EAAGI,QAEvB,IAYS5B,EAAa,SAAC6G,GAAD,OAAyB,WACjD,GAAIA,EAAO,CACT,IAAMC,EAASD,EAAME,OAAQD,OAC7B,GAAIA,EAEF,GAAIA,EAAM,wBACRA,EAAM,+BACD,GAAIA,EAAM,qBACfA,EAAM,4BACD,GAAIA,EAAM,oBACfA,EAAM,0BACD,KAAIA,EAAM,kBAIf,OAHAA,EAAM,gCCvCDE,EAAY,SAACC,GAAD,OACvB7B,MAAK,oCAAArI,OAAqCkK,GAAa,CACrDC,OAAQ,SACPhD,KAAK,SAACmB,GACP,GAAIA,EAAIC,GACN,OAAOD,EAAIE,mBCUjB4B,SAAOC,YAAY,QAAS,CAC1BC,KAAM,KACNC,SAAS,EACTC,MAAO,GACPC,OAAQ,CACNC,oBAAqB,aAIzBC,YAAUC,2BAA2B,SAAU,CAC7CC,mBAAoB,SAClBC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAA+C,GADlDC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEH,QAAAC,EAAAC,EAAiBR,EAAQS,QAAzBC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAkC,KAAvBW,EAAuBP,EAAAxJ,MAChC,OAAQ+J,EAAGC,MACT,IAAK,cACH,IAAM7B,EAAY4B,EAAGrF,OACjByD,GACFgB,EAAYc,KACV/B,EAAUC,GAAW/C,KAAK,SAAAqB,GACxBQ,QAAQC,IAAIT,GACZ,IAAMtI,EAAMR,OAAOC,KAAK6I,GAAM,GAC1BkB,EAAO,GAUX,OAREA,EADS,SAAPxJ,EACKsI,EAAKtI,GACI,SAAPA,EACL,cAAAF,OAAiBwI,EAAKtI,GAAtB,KAEA,GAAAF,OAAME,EAAN,KAAAF,OACkB,iBAAbwI,EAAKtI,GAAZ,IAAAF,OAAmCwI,EAAKtI,GAAxC,KAAkDsI,EAAKtI,IAGpD,CACLT,MAAK,uCAAAO,OAAW0J,EAAX,kCACLuC,KAAM,CACJC,MAAO,CACL,CACEA,MAAO,CACL,CACEnB,QACArB,SAGJyC,SAAUrB,EAAMsB,OAItBC,KAAM,WACNC,aAAa,QArCxB,MAAAC,GAAAnB,GAAA,EAAAC,EAAAkB,EAAA,YAAApB,GAAA,MAAAK,EAAAgB,QAAAhB,EAAAgB,SAAA,WAAApB,EAAA,MAAAC,GAgDH,OAAO7B,QAAQiD,IAAIvB,MAIvBP,YAAU+B,+BAA+B,SAAU,CACjDC,uBAAwB,SACtB7B,EACA8B,EACAC,EACA5B,GAEA,IAAM6B,EAAWhC,EAAMiC,qBAAqBH,GACtC7B,EAAQ,IAAIiC,QAChBJ,EAASK,WACTH,EAASI,YACTN,EAASK,WACTH,EAASK,WA4BLC,EAA0C,GAkDhD,MA5Ea,CACX,KACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,QACA,OAkBGvN,IAAI,SAAAwN,GACPD,EAAYpB,KAAK,CACfqB,QACAhB,KAAM1B,YAAU2C,mBAAmBC,SACnCC,WAAU,GAAAxN,OAAKqN,EAAL,UACVI,gBAAiB9C,YAAU+C,6BAA6BC,gBACxD5C,YAtBW,CAAC,QAAS,QAAS,MAAO,QAAS,MAAO,QAAS,OA0B3DlL,IAAI,SAAAwN,GACTD,EAAYpB,KAAK,CACfqB,QACAhB,KAAM1B,YAAU2C,mBAAmBC,SACnCC,WAAU,GAAAxN,OAAKqN,EAAL,UACVI,gBAAiB9C,YAAU+C,6BAA6BC,gBACxD5C,YA/BW,CAAC,UAmCTlL,IAAI,SAAAwN,GACTD,EAAYpB,KAAK,CACfqB,QACAhB,KAAM1B,YAAU2C,mBAAmBC,SACnCC,WAAU,GAAAxN,OAAKqN,EAAL,UACVI,gBAAiB9C,YAAU+C,6BAA6BC,gBACxD5C,YAxCW,CAAC,QAAS,SAAU,YAAa,UAAW,SA4CpDlL,IAAI,SAAAwN,GACTD,EAAYpB,KAAK,CACfqB,QACAhB,KAAM1B,YAAU2C,mBAAmBM,YACnCJ,WAAU,GAAAxN,OAAKqN,EAAL,UACVI,gBAAiB9C,YAAU+C,6BAA6BC,gBACxD5C,YAjDe,CACjB,QACA,SACA,WACA,cACA,YACA,QACA,cACA,aA6CSlL,IAAI,SAAAwN,GACbD,EAAYpB,KAAK,CACfqB,QACAhB,KAAM1B,YAAU2C,mBAAmBO,SACnCL,WAAU,GAAAxN,OAAKqN,EAAL,KACVtC,YAGG,CAAEqC,YAAaA,MAI1BzC,YAAUmD,SAAS,CAAElP,GAAI,yBAEzB+L,YAAUoD,yBAAyB,uBAAwB,CACzDC,UAAW,CACTC,KAAM,CAAC,CAAC,UAAW,cAIvB,IAwBa7L,EAAW,SACtB8L,EACA/E,EACAgF,EACAC,EACAtE,EACAuE,EACAC,GAPsB,OAQnB,SAAC7H,EAAgB8H,GAChBL,GA1Be,SACnBA,EACAC,EACAC,GAEA,IAGMI,EAHgBN,EACnBO,WACAC,YAbH,g8BAawB,GAAM,GAAM,EAAO,MAAM,GACY7O,IAC3D,SAAC8O,GAAD,MAA8B,CAC5B5D,MAAO4D,EAAM5D,MACbrE,QAAS,CAAEkI,gBAAiB,mBAGhCR,EAASF,EAAWW,iBAAiBV,EAAOK,IAa1CM,CAAaZ,EAAYC,EAAOC,GAElCjF,EAAU1C,GACN4H,GACF9J,aAAa8J,GAEXvE,GACFwE,EACE9J,WAAW,WACTsF,EAAMiF,KAAKtI,GAAQ,IAClB,QAkBIlB,EAAY,SACvBW,EACA8I,GAFuB,OAGpB,WACHA,EAAYC,KAAKC,IAAI,GAAIhJ,EAAW,MAGzBiJ,EAAkB/E,SAAO+E,gBAIhCC,EAAgB,SAACC,GACrB,OAAQA,GACN,IAAK,QACH,OAAOC,iBAAe7G,MACxB,IAAK,OACH,OAAO6G,iBAAeC,KACxB,IAAK,UACH,OAAOD,iBAAeE,QACxB,IAAK,OACH,OAAOF,iBAAeG,OAgBfC,EAAe,SAACxB,GAAD,OAAmC,SAC7DmB,GAD6D,OAE1D,SAACM,GACAzB,GACFiB,EAAgBjB,EAAWO,WAAaY,EAhBX,SAACM,GAAD,OAC/BA,EAAK9P,IAAI,SAAAoJ,GAAG,MAAK,CACf2G,SAAUR,EAAcnG,EAAIoG,MAC5BQ,gBAAiB5G,EAAI6G,IAAM,EAC3B5C,YAAajE,EAAI8G,IACjBC,cAAe/G,EAAI6G,IAAO,EAC1B3C,UAAWlE,EAAI8G,IAAO9G,EAAIgH,IAC1BlE,KAAM9C,EAAI/I,IACVuG,OAAQwC,EAAIiH,QAAUjH,EAAIiH,QAAU,GACpCC,QAASC,oBAAUnH,MAO2BoH,CAAkBV,OC5RvDW,EAAgB,SAACxG,GAAD,OAA2B,SAACyG,GACvD,GAAIzG,EAAO,CACT,IAAM0G,EAAK1G,EAAM0G,GACXC,EAAUF,EAAIG,MAAM,KACpBC,EAAUF,EAAQ,GAClBG,EAAOH,EAAQI,MAAM,GAC3BL,EAAGM,KAAKH,EAASC,wBCRRG,GAAb,oBAAAA,IAAArR,OAAAsR,EAAA,EAAAtR,CAAAuR,KAAAF,GAAAE,KACUC,OAAQ,EADlB,OAAAxR,OAAAyR,EAAA,EAAAzR,CAAAqR,EAAA,EAAA7Q,IAAA,MAAA6B,MAAA,SAGcqP,GAAkB,IAAAC,EAAAJ,KAC5BG,IACA5M,WAAW,WACL6M,EAAKH,OACPG,EAAKC,IAAIF,IAEV,OATP,CAAAlR,IAAA,OAAA6B,MAAA,SAYcqP,GACNH,KAAKC,MACPD,KAAKC,OAAQ,GAEbD,KAAKC,OAAQ,EACbD,KAAKK,IAAIF,QAjBfL,EAAA,GCmOeQ,GA1LiB,SAAChT,GAC/B,IHsMA2H,EACA8I,EAR6BwC,EHzJKC,EMtC5BzK,EAAazI,EAAMmT,GAAG3R,OAASxB,EAAMmT,GAAG3R,OAAS,kBACjDK,EAAsB,KAAf7B,EAAMoT,KAAcC,SAASrT,EAAMoT,KAAKE,OAAO,IAAM,EAFf9N,EAGrBC,mBAAS,IAHYC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAqE,EAAA,GAG5CnE,EAH4CqE,EAAA,GAGnC6N,EAHmC7N,EAAA,GAAA0B,EAIT3B,oBAAS,GAJA4B,EAAAlG,OAAAwE,EAAA,EAAAxE,CAAAiG,EAAA,GAI5CoM,EAJ4CnM,EAAA,GAI7BzG,EAJ6ByG,EAAA,GAAAE,EAKL9B,oBAAS,GALJ+B,EAAArG,OAAAwE,EAAA,EAAAxE,CAAAoG,EAAA,GAK5C1C,EAL4C2C,EAAA,GAK3B5C,EAL2B4C,EAAA,GAAAiM,EAMvBhO,mBAAS,CAAEvE,MAAO,GAAIU,KAAM,KANL8R,EAAAvS,OAAAwE,EAAA,EAAAxE,CAAAsS,EAAA,GAM5CjS,EAN4CkS,EAAA,GAMpCC,EANoCD,EAAA,GAAAE,EAOTnO,mBAAS,IAPAoO,EAAA1S,OAAAwE,EAAA,EAAAxE,CAAAyS,EAAA,GAO5CE,EAP4CD,EAAA,GAO7BE,EAP6BF,EAAA,GAAAG,EAQzBvO,mBAAS,MARgBwO,EAAA9S,OAAAwE,EAAA,EAAAxE,CAAA6S,EAAA,GAQ5CzI,GAR4C0I,EAAA,GAQrCC,GARqCD,EAAA,GAAAE,GASvB1O,mBAAS,IATc2O,GAAAjT,OAAAwE,EAAA,EAAAxE,CAAAgT,GAAA,GAS5CjM,GAT4CkM,GAAA,GASpCxJ,GAToCwJ,GAAA,GAAAC,GAUb5O,mBAAS,MAVI6O,GAAAnT,OAAAwE,EAAA,EAAAxE,CAAAkT,GAAA,GAU5CE,GAV4CD,GAAA,GAU/BE,GAV+BF,GAAA,GAAAG,GAWPhP,mBAAS,IAXFiP,GAAAvT,OAAAwE,EAAA,EAAAxE,CAAAsT,GAAA,GAW5CE,GAX4CD,GAAA,GAW5BE,GAX4BF,GAAA,GAAAG,GAYfpP,mBAAS,MAZMqP,GAAA3T,OAAAwE,EAAA,EAAAxE,CAAA0T,GAAA,GAY5ClF,GAZ4CmF,GAAA,GAYhCC,GAZgCD,GAAA,GAAAE,GAazBvP,mBAAS,IAbgBwP,GAAA9T,OAAAwE,EAAA,EAAAxE,CAAA6T,GAAA,GAa5CpF,GAb4CqF,GAAA,GAarCpF,GAbqCoF,GAAA,GAAAC,GAcTzP,oBAAS,GAdA0P,GAAAhU,OAAAwE,EAAA,EAAAxE,CAAA+T,GAAA,GAc5CE,GAd4CD,GAAA,GAc7BjT,GAd6BiT,GAAA,GAAAE,GAeP5P,mBAAS,IAfF6P,GAAAnU,OAAAwE,EAAA,EAAAxE,CAAAkU,GAAA,GAe5CE,GAf4CD,GAAA,GAe5BE,GAf4BF,GAAA,GAAAG,GAgBHhQ,oBAAS,GAhBNiQ,GAAAvU,OAAAwE,EAAA,EAAAxE,CAAAsU,GAAA,GAgB5CtQ,GAhB4CuQ,GAAA,GAgB1BxQ,GAhB0BwQ,GAAA,GAAAC,GAiBXlQ,mBAAS,IAjBEmQ,GAAAzU,OAAAwE,EAAA,EAAAxE,CAAAwU,GAAA,GAiB5ChP,GAjB4CiP,GAAA,GAiB9BC,GAjB8BD,GAAA,GAAAE,GAkBfrQ,oBAAS,GAlBMsQ,GAAA5U,OAAAwE,EAAA,EAAAxE,CAAA2U,GAAA,GAkB5CE,GAlB4CD,GAAA,GAkBhCE,GAlBgCF,GAAA,GAAAG,GAmBrBzQ,oBAAS,GAnBY0Q,GAAAhV,OAAAwE,EAAA,EAAAxE,CAAA+U,GAAA,GAmB5CE,GAnB4CD,GAAA,GAmBnCE,GAnBmCF,GAAA,GAAAG,GAoBd7Q,mBAAS,IAAI+M,IApBC+D,GAAApV,OAAAwE,EAAA,EAAAxE,CAAAmV,GAAA,GAoB5CE,GApB4CD,GAAA,GAAAE,IAAAF,GAAA,GAqBhB9Q,mBAAS,KArBOiR,GAAAvV,OAAAwE,EAAA,EAAAxE,CAAAsV,GAAA,GAqBhCE,IArBgCD,GAAA,GAAAA,GAAA,IAAAE,GAsBLnR,mBAC5C,MAvBiDoR,GAAA1V,OAAAwE,EAAA,EAAAxE,CAAAyV,GAAA,GAsB5C9G,GAtB4C+G,GAAA,GAsB3B9G,GAtB2B8G,GAAA,GA0B7CC,GAAe,WACnB,IAAMjV,EACqB,KAAzBiJ,OAAOiM,SAAS3D,KACZC,SAASvI,OAAOiM,SAAS3D,KAAKE,OAAO,IACrC,EACNxI,OAAOiM,SAAS3D,KAAhB,IAAA3R,OAA2BI,IAASL,EAAOI,KAAK2G,OAAS,EAAI,EAAI1G,EAAO,IAEpE2C,GAAO,SAAC+G,GAAD,OAA2B,SAACrD,GAAD,OAAoB,WAC/B,IAAvB1G,EAAOI,KAAK2G,QACdwC,eAAeM,QAAf,GAAA5J,OACKgH,GADLhH,OACkBD,EAAOI,KAAKC,GAAM6G,KADpC,cAEER,GAGJ2N,GAAgB,IACZlG,IACFA,GAAWqH,aAAa,CACtBrI,YAAa,EACbC,UAAW,EACX0C,gBAAiB,EACjBG,cAAe,ILpEH,SAAClG,GAAD,OAAyB,SAACrD,GAAD,OAAoB,WAC/D,SAAIqD,IAASA,EAAMiF,KAAKtI,MKsElB+O,CAAU1L,EAAV0L,CAAiB/O,EAAjB+O,GACFzC,GAAe,MAEfA,GAAe,YAkEnB,OA9DA1O,oBAAU,YNvC0B,SACpCyN,GAEAzJ,MAAK,GAAArI,OAAI+H,EAAJ,UAA6B,CAAEC,YACjCb,KAAK,SAACmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,SAGdrB,KAAK,SAACsO,GACL,IAAMC,EAAoD,GACpD9V,EAAmB,GAFSuL,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGlC,QAAAC,EAAAC,EAAsBiK,EAAtB/J,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAgC,KAArBrD,EAAqByD,EAAAxJ,MACT,QAAjB+F,EAAQuH,MACVqG,EAAqB1J,KACnBnD,EAAuBf,EAAQb,KAAMrH,KANT,MAAA2M,GAAAnB,GAAA,EAAAC,EAAAkB,EAAA,YAAApB,GAAA,MAAAK,EAAAgB,QAAAhB,EAAAgB,SAAA,WAAApB,EAAA,MAAAC,GAUlC7B,QAAQiD,IAAIiJ,GAAsBvO,KAAK,kBAAM2K,EAAWlS,OMqB1D+V,CAAuB7D,GACvB,IAAM8D,EAAelR,SAASC,eAAe,gBAC7C,GAAIiR,EAAc,CAChB,IACM9L,GADU,IAAI+L,WACEC,WAAWF,GACjCnD,GAAS3I,KAEV,IACHzF,oBAAU,WACJyF,KACFA,GAAMxF,iBAAiB,QAASoL,EAAaxB,GAAbwB,CAAyB,UACzD5F,GAAMxF,iBAAiB,UAAWoL,EAAaxB,GAAbwB,CAAyB,YAC3D5F,GAAMxF,iBAAiB,OAAQoL,EAAaxB,GAAbwB,CAAyB,WAEzD,CAAC5F,GAAOoE,KACX7J,oBAAU,WACJyF,IAASoE,KACXpE,GAAMxF,iBAAiB,OAAQ,SAACzC,IH+KN,SAC9BqT,EACAhH,GAF8B,OAG3B,SAAC6H,EAAsBC,GAC1Bd,EAAa,SAAAe,GAAE,OACb/H,EAAWW,iBAAiBoH,EAAI,CAC9B,CACElL,MAAO,IAAIiC,QAAM+I,EAAc,EAAGC,EAAY,GAC9CtP,QAAS,CAAEwP,aAAa,EAAMvX,UAAW,wBGtLzCwX,CAAiBjB,GAAchH,GAA/BiI,CAA2CtU,EAAEiO,IAAM,EAAGjO,EAAEiO,IAAM,KAEhEhG,GAAMxF,iBAAiB,SAAU,SAACzC,GAChB,OAAZA,EAAEuU,QAA6B,OAAVvU,EAAEwN,MHyLD,SAChC6F,EACAhH,GAFgC,OAG7B,WACHgH,EAAa,SAAAe,GAAE,OAAI/H,EAAWW,iBAAiBoH,EAAI,OG5L3CI,CAAmBnB,GAAchH,GAAjCmI,OAIL,CAACvM,GAAOoE,GAAYgH,KACvB7Q,oBAAU,YL7Ee,SACzB+P,EACAkC,EAIAxM,GAEA,GAAIA,EAAO,CACT,IAAMyM,EAAa,SAACC,GAAD,OACjBpC,EAAgB,SAAAqC,GAAI,OAAIA,EAAKzW,OAAO,CAACwW,OACvC1M,EAAMxF,iBAAiB,SAAU,SAACzC,GAChC,IAAM2U,EAAkC,GACxCA,EAAexK,KAAK,CAClBjK,MAAOF,EAAE6H,OAEX6M,EAAWC,KAEb1M,EAAMxF,iBAAiB,SAAU,SAACzC,GAChC,IAAM2U,EAAkC,GACxCA,EAAexK,KAAK,CAClBjK,MAAOF,EAAE6H,KACTjH,MAAO,QAET8T,EAAWC,KASF1M,EAAM0G,GACdlM,iBACD,UACA,SAACzC,GAMC,IAAM2U,EAAkC,GACpC3U,EAAE3B,OAAOoW,GACXA,EAAczU,EAAE3B,KAAiB,SAAZ2B,EAAEE,OAEzByU,EAAexK,KAAK,CAClBjK,MAAK,2BAAA/B,OAA6B6B,EAAE3B,IAA/B,sBAAAF,OAAuD6B,EAAEE,MAAzD,YAAA/B,OAAyE6B,EAAE6U,SAA3E,WAEPH,EAAWC,MK6BfG,CACEvC,GACA,CAAEwC,UAAWpC,GAAeqC,MAAOjC,IACnC9K,IAEEA,KACF0K,GAAsD,SAAxC1K,GAAM0G,GAAGsG,OAAO,aAAa,IAC3ClC,GAA+C,SAApC9K,GAAM0G,GAAGsG,OAAO,SAAS,MAErC,CAAChN,KACJzF,oBAAU,WACJzE,EAAQoH,IACVkL,EAAUtS,EAAQoH,KAEnB,CAACA,EAAYpH,IAChByE,oBAAU,aAgBP,CAACsQ,GAAS7K,KAGXtL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqY,EAAA,EAAD,CAAWpY,UAAU,aACnBH,EAAAC,EAAAC,cAACsY,EAAD,CACEpX,QAASA,EACTT,iBAAkBA,EAClBsB,iBAAkB,kBAAMA,IAAiB,MAE3CjC,EAAAC,EAAAC,cAACuY,EAAD,CAASjW,KAAM+Q,EAAe7Q,QAAS/B,IACvCX,EAAAC,EAAAC,cAACwY,EAAD,CACElW,KAAM2S,GACNzS,QAAST,GACTsB,MAAO+R,GACPzR,SAAU0R,GACVjS,YAAawO,EAAcxG,MAE7BtL,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAK1I,GAAG,YACNJ,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAK3I,GAAG,WAAW4I,GAAI,GACrBhJ,EAAAC,EAAAC,cAACyY,EAAD,CACEpX,OAAQA,EACRiH,WAAYA,EACZ5G,KAAMA,EACN0H,QAASuK,EACTjL,QAAShE,EACTL,KAAMA,GAAK+G,IACX/C,cNxGsB0K,EMwGYa,ENxG8B,SAC5EtL,EACAC,GAEA,IAAMyC,EAAOL,OAAOC,eAAeC,QAAtB,GAAAvJ,OAAiCgH,GAAjChH,OAA8CiH,EAA9C,cACb,OAAIyC,GACF+H,EAAW/H,GACJ,IAAIF,QAAQ,eAEdpB,EAAmB,GAAApI,OAAI+H,GAAJ/H,OAAsBgH,GAAtBhH,OAAmCiH,EAAnC,cACvBE,KAAK,SAACmB,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIoB,OAEb,MAAM,IAAIjB,MAAMH,EAAIqB,cAErBxC,KAAK,SAACuC,GACL+H,EAAW/H,GACXL,OAAOC,eAAeM,QAAtB,GAAA5J,OAAiCgH,GAAjChH,OAA8CiH,EAA9C,aAA+DyC,OMuFvDxC,YAAagC,EAAsBC,MAErC3K,EAAAC,EAAAC,cAAC0Y,EAAD,CACEhU,gBAAiBA,EACjBM,iBAAkBA,GAClBP,mBAAoBA,EACpBM,oBAAqBA,GACrByB,aAAcA,GACdnC,KACEwR,GACI,kBAAMQ,GAAWhS,KAAKsS,KACtBtS,GAAK+G,GAAL/G,CAAY0D,IAElBxD,WAAYA,EAAW6G,IACvB/E,QAAS8E,EAAOC,OAGpBtL,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAK3I,GAAG,YAAY4I,GAAI,GACtBhJ,EAAAC,EAAAC,cAAC2Y,EAAD,CACEnR,SAAUgN,GACV1M,MAAOsM,GACPrM,OAAQA,GACRrE,SAAUA,EACR8L,GACA/E,GACAgF,GACAC,GACAtE,GACAuE,GACAC,IAEF3H,gBHiBiB6K,EGjBc8B,GHiB8B,SACzElJ,GAEAoH,EAAUpH,KGnBE/E,UHuBZa,EGvB+BgN,GHwB/BlE,EGxB+CmE,GHyB5C,WACHnE,EAAY9I,EAAW,KGzBXX,UAAWA,EAAU2N,GAAgBC,+BCtMnDmE,IAAStN,OACPxL,EAAAC,EAAAC,cAAC6Y,GAAA,EAAD,KACE/Y,EAAAC,EAAAC,cAAC8Y,GAAA,EAAD,CACExN,OAAQ,SAAAzL,GAAK,OACXC,EAAAC,EAAAC,cAAC+Y,GAAD,CACE/F,IAfWgG,EAeKnZ,EAAM+W,SAASqC,OAdvCD,EACG7F,OAAO,GACPnB,MAAM,KACNkH,OAAO,SAACC,EAAKC,GACZ,IAAMC,EAAOD,EAAEpH,MAAM,KAErB,OADAmH,EAAIE,EAAK,IAAMA,EAAK,GACbF,GACN,KAQGlG,KAAMpT,EAAM+W,SAAS3D,OAhBX,IAAC+F,MAqBnBhT,SAASC,eAAe","file":"static/js/main.570a9933.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { CourseShape } from '../../logic/course';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from 'react-bootstrap';\nimport './Header.css';\n\nexport type HeaderProps = {\n  courses: { [path: string]: CourseShape };\n  setIsShowVersion: (isShow: boolean) => void;\n  setIsShowSetting: () => void;\n};\n\nconst Header: React.FC<HeaderProps> = (props: HeaderProps) => {\n  return (\n    <div className=\"Header\" id=\"puppy-header\">\n      <Navbar bg=\"white\" variant=\"light\" expand=\"lg\">\n        <Navbar.Brand onClick={() => props.setIsShowVersion(true)}>\n          <img\n            src=\"./image/logo.png\"\n            width=\"25\"\n            height=\"25\"\n            className=\"d-inline-block align-top\"\n          />\n          {' Puppy'}\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <NavDropdown title={'Courseware'} id=\"nav-dropdown-courses\">\n            {Object.keys(props.courses).map(course_path => {\n              const course = props.courses[course_path];\n              return (\n                <NavDropdown\n                  title={course.title}\n                  id={`nav-dropdown-pages-${course.title}`}\n                  drop=\"right\"\n                  key={course.title}\n                >\n                  {course.list.map(\n                    (page: { path: string; title: string }, i: number) => (\n                      <NavDropdown.Item\n                        href={`?course=${course_path}#${i}`}\n                        key={i}\n                      >\n                        {page.title}\n                      </NavDropdown.Item>\n                    )\n                  )}\n                </NavDropdown>\n              );\n            })}\n          </NavDropdown>\n        </Nav>\n        <Button className=\"puppy-background\" onClick={props.setIsShowSetting}>\n          <FontAwesomeIcon icon={faCog} />\n        </Button>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { puppy_version } from 'puppy-transpiler';\n\ntype VersionProps = {\n  show: boolean;\n  setShow: (show: boolean) => void;\n};\n\nconst Version: React.FC<VersionProps> = (props: VersionProps) => {\n  return (\n    <>\n      <Modal show={props.show} onHide={() => props.setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Puppy</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ whiteSpace: 'pre-line' }}>\n          <p>{`Version: ${puppy_version()}`}</p>\n          <p>{'Browser: Google Chrome (OS X), Firefox'}</p>\n          <p>\n            If you find some bugs or suggestions, please send issues in{' '}\n            <a href=\"https://github.com/playpuppy/LIVE2019\" target=\"blank\">\n              {'GitHub'}\n            </a>\n            .\n          </p>\n        </Modal.Body>\n        {/* <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => props.setShow(false)}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={() => props.setShow(false)}>\n            Save Changes\n          </Button>\n        </Modal.Footer> */}\n      </Modal>\n    </>\n  );\n};\n\n// render(<Example />);\n\nexport default Version;\n","import React from 'react';\nimport { Modal, Form, FormControl } from 'react-bootstrap';\nimport './Setting.css';\n\ntype SettingProps = {\n  show: boolean;\n  value: string;\n  setShow: (show: boolean) => void;\n  setValue: (v: string) => void;\n  submitValue: (v: string) => void;\n};\n\nconst Setting: React.FC<SettingProps> = (props: SettingProps) => {\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    props.submitValue(props.value);\n    props.setShow(false);\n    if (e.preventDefault) {\n      e.preventDefault();\n    }\n    return false;\n  };\n  return (\n    <Modal show={props.show} onHide={() => props.setShow(false)}>\n      <Modal.Header closeButton>\n        <Modal.Title>Puppy Setting</Modal.Title>\n      </Modal.Header>\n      <Form id=\"puppy-setting\" onSubmit={onSubmit}>\n        <Form.Group controlId=\"formCommand\">\n          <FormControl\n            value={props.value}\n            onChange={e => props.setValue(e.target.value)}\n          />\n        </Form.Group>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Setting;\n","import React, { CSSProperties } from 'react';\nimport { StringElement, ConsoleValue } from '../../logic/puppy';\nimport './PuppyConsole.css';\n\ntype LineProps = {\n  elements: StringElement[];\n};\n\nconst Line: React.FC<LineProps> = (props: LineProps) => {\n  const create_span = (e: StringElement, i: number) => {\n    const css: CSSProperties = {};\n    if (e.color) {\n      css.color = e.color;\n    }\n    if (e.backgroundColor) {\n      css.backgroundColor = e.backgroundColor;\n    }\n    return (\n      <span key={i} style={css}>\n        {e.value}\n      </span>\n    );\n  };\n  return (\n    <div className=\"PuppyConsoleLine\">\n      <span>{props.elements.map((e, i) => create_span(e, i))}</span>\n    </div>\n  );\n};\n\nexport type PuppyConsoleProps = {\n  value: ConsoleValue;\n};\n\nconst PuppyConsole: React.FC<PuppyConsoleProps> = (\n  props: PuppyConsoleProps\n) => {\n  return (\n    <div className=\"PuppyConsole\">\n      {props.value.map((elements, i) => (\n        <Line key={i} elements={elements} />\n      ))}\n    </div>\n  );\n};\n\nexport default PuppyConsole;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './PuppyScreen.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlay,\n  faExpand,\n  faBookOpen,\n  faBook,\n  faTerminal,\n} from '@fortawesome/free-solid-svg-icons';\nimport PuppyConsole from './PuppyConsole';\nimport { ConsoleValue } from '../../logic/puppy';\n\ntype PuppyFooterProps = {\n  isCourseVisible: boolean;\n  isConsoleVisible: boolean;\n  setIsCourseVisible: (visible: boolean) => void;\n  setIsConsoleVisible: (visible: boolean) => void;\n  fullscreen: () => void;\n  play: () => void;\n};\n\nconst PuppyFooter: React.FC<PuppyFooterProps> = (props: PuppyFooterProps) => {\n  return (\n    <div id=\"puppy-footer\">\n      <Button className=\"puppy-background\" onClick={() => props.play()}>\n        <FontAwesomeIcon icon={faPlay} />\n        {' Play'}\n      </Button>\n      <Button className=\"puppy-background\" onClick={() => props.fullscreen()}>\n        <FontAwesomeIcon icon={faExpand} />\n      </Button>\n      <Button\n        className=\"puppy-background\"\n        onClick={() => props.setIsCourseVisible(!props.isCourseVisible)}\n      >\n        <FontAwesomeIcon icon={props.isCourseVisible ? faBookOpen : faBook} />\n      </Button>\n      <Button\n        className=\"puppy-background\"\n        style={{ paddingRight: '1em', paddingLeft: '0.4em' }}\n        onClick={() => props.setIsConsoleVisible(!props.isConsoleVisible)}\n      >\n        <FontAwesomeIcon\n          size={'xs'}\n          icon={faTerminal}\n          style={{ verticalAlign: 'top' }}\n        />\n      </Button>\n    </div>\n  );\n};\n\nexport type PuppyScreenProps = PuppyFooterProps & {\n  consoleValue: ConsoleValue;\n  setSize: (width: number, height: number) => void;\n};\n\nconst PuppyScreen: React.FC<PuppyScreenProps> = (props: PuppyScreenProps) => {\n  const [resizeTimer, setResizeTimer] = useState(null as NodeJS.Timeout | null);\n  useEffect(() => {\n    addEventListener('resize', () => {\n      if (resizeTimer) {\n        clearTimeout(resizeTimer);\n        setResizeTimer(null);\n      }\n      setResizeTimer(\n        setTimeout(() => {\n          const w = document.getElementById('puppy-screen')!.clientWidth;\n          const h = document.getElementById('puppy-screen')!.clientHeight;\n          props.setSize(w, h);\n        }, 300)\n      );\n    });\n  }, [props.setSize]);\n\n  return (\n    <>\n      <div\n        id=\"puppy-screen\"\n        onClick={() => props.setIsCourseVisible(false)}\n      ></div>\n      <div\n        id=\"puppy-console\"\n        style={{ visibility: props.isConsoleVisible ? 'visible' : 'hidden' }}\n      >\n        <PuppyConsole value={props.consoleValue} />\n      </div>\n      <PuppyFooter\n        isCourseVisible={props.isCourseVisible}\n        isConsoleVisible={props.isConsoleVisible}\n        setIsCourseVisible={props.setIsCourseVisible}\n        setIsConsoleVisible={props.setIsConsoleVisible}\n        play={props.play}\n        fullscreen={props.fullscreen}\n      />\n    </>\n  );\n};\n\nexport default PuppyScreen;\n","import React, { useEffect, useState } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport './Editor.css';\n\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { CodeEditor, ContentChangedEvent } from '../../logic/editor';\n\ntype EditorFooterProps = {\n  fontPlus: () => void;\n  fontMinus: () => void;\n};\n\nconst EditorFooter: React.FC<EditorFooterProps> = (\n  props: EditorFooterProps\n) => {\n  return (\n    <div id=\"editor-footer\">\n      <Button className=\"puppy-background\" onClick={props.fontPlus}>\n        <FontAwesomeIcon icon={faPlus} />\n      </Button>\n      <Button className=\"puppy-background\" onClick={props.fontMinus}>\n        <FontAwesomeIcon icon={faMinus} />\n      </Button>\n    </div>\n  );\n};\n\nexport type EditorProps = {\n  fontSize: number;\n  theme: string;\n  source: string;\n  onChange: (source: string, event: ContentChangedEvent) => void;\n  editorDidMount: (editor: CodeEditor) => void;\n  fontPlus: () => void;\n  fontMinus: () => void;\n};\n\nconst Editor: React.FC<EditorProps> = (props: EditorProps) => {\n  const [height, setHeight] = useState(500);\n  const [width, setWidth] = useState(500);\n  const [resizeTimer, setResizeTimer] = useState(null as NodeJS.Timeout | null);\n  const editorOptions = {\n    selectOnLineNumbers: true,\n    fontSize: props.fontSize,\n    wordWrap: 'on' as 'on',\n    lightbulb: { enabled: true },\n  };\n\n  useEffect(() => {\n    addEventListener('resize', () => {\n      if (resizeTimer) {\n        clearTimeout(resizeTimer);\n        return;\n      }\n      setResizeTimer(\n        setTimeout(() => {\n          setHeight(document.getElementById('right-col')!.clientHeight);\n          setWidth(document.getElementById('right-col')!.clientWidth);\n        }, 300)\n      );\n    });\n    setHeight(document.getElementById('right-col')!.clientHeight);\n    setWidth(document.getElementById('right-col')!.clientWidth);\n  }, []);\n\n  return (\n    <div id=\"puppy-editor\">\n      <MonacoEditor\n        width={width}\n        height={height}\n        language={'python'}\n        theme={props.theme}\n        value={props.source}\n        options={editorOptions}\n        onChange={props.onChange}\n        editorDidMount={props.editorDidMount}\n      />\n      <EditorFooter fontPlus={props.fontPlus} fontMinus={props.fontMinus} />\n    </div>\n  );\n};\n\nexport default Editor;\n","import React, { useEffect } from 'react';\nimport * as marked from 'marked';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from '@fortawesome/free-solid-svg-icons';\nimport { CourseShape } from '../../logic/course';\n\nimport './Course.css';\nimport './github-markdown.css';\n\ntype CourseProps = {\n  course: CourseShape;\n  coursePath: string;\n  page: number;\n  content: string;\n  visible: boolean;\n  play: (source: string) => () => void;\n  fetchContent: (coursePath: string, path: string) => void;\n  fetchSample: (coursePath: string, path: string) => Promise<string>;\n};\n\nconst Course: React.FC<CourseProps> = (props: CourseProps) => {\n  useEffect(() => {\n    if (props.course.list.length !== 0) {\n      props.fetchContent(props.coursePath, props.course.list[props.page].path);\n      props\n        .fetchSample(props.coursePath, props.course.list[props.page].path)\n        .then((source: string) => {\n          props.play(source)();\n        });\n    }\n  }, [props.page, props.coursePath, props.course]);\n\n  return (\n    <div\n      id=\"puppy-course\"\n      style={{ visibility: props.visible ? 'visible' : 'hidden' }}\n    >\n      <Card className=\"course-all\">\n        <Card.Header className=\"course-header\">\n          {/* <Row>\n            <button\n              className=\"close-button\"\n              onClick={() => props.setVisible(false)}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </Row> */}\n          <Row>\n            <Col className=\"card-header-left\" xs={6}>\n              {props.course.list &&\n              props.course.list.length !== 0 &&\n              props.page !== 0 ? (\n                <a href={`#${props.page - 1}`}>\n                  <FontAwesomeIcon icon={faChevronLeft} />\n                  {` ${props.course.list[props.page - 1].title}`}\n                </a>\n              ) : null}\n            </Col>\n            <Col className=\"card-header-right\" xs={6}>\n              {props.course.list &&\n              props.course.list.length !== 0 &&\n              props.page !== props.course.list.length - 1 ? (\n                <a href={`#${props.page + 1}`}>\n                  {`${props.course.list[props.page + 1].title} `}\n                  <FontAwesomeIcon icon={faChevronRight} />\n                </a>\n              ) : null}\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body className=\"course-body\">\n          <div\n            className=\"markdown-body\"\n            dangerouslySetInnerHTML={{\n              __html: marked(props.content),\n            }}\n          ></div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Course;\n","import { loadFile } from './util';\n\nexport type CourseShape = {\n  title: string;\n  list: {\n    path: string;\n    title: string;\n  }[];\n};\n\nexport type Courses = { [path: string]: CourseShape };\n\nexport type GitHubContent = {\n  type: 'file' | 'dir';\n  name: string;\n  path: string;\n  download_url: string | null;\n};\n\nexport type GitHubContents = GitHubContent[];\n\n// https://developer.github.com/v3/repos/contents/\nconst GITHUB_API_REPO =\n  'https://api.github.com/repos/playpuppy/course-demo/contents/';\n\nconst headers = new Headers({\n  Origin: process.env['PUBLIC_URL']!,\n});\n\nconst fetchFileFromGitHub = (path: string) =>\n  fetch(path, { headers })\n    .then((res: Response) => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw Error(res.status.toString());\n    })\n    .then((content: GitHubContent) => {\n      if (content.download_url) {\n        return fetch(content.download_url, { headers });\n      }\n      throw Error(`This path ${path} is not file.`);\n    });\n\nconst fetchSettingFromGitHub = (path: string, courses: Courses) =>\n  fetchFileFromGitHub(`${GITHUB_API_REPO}${path}/setting.json`)\n    .then((res: Response) => {\n      if (res.ok) {\n        return res.json();\n      }\n    })\n    .then((course: CourseShape) => {\n      courses[path] = course;\n    })\n    .catch((msg: string) => {\n      console.log(`ERR ${msg}`);\n    });\n\nexport const fetchCoursesFromGitHub = (\n  setCourses: (courses: Courses) => void\n) =>\n  fetch(`${GITHUB_API_REPO}course`, { headers })\n    .then((res: Response) => {\n      if (res.ok) {\n        return res.json();\n      }\n    })\n    .then((contents: GitHubContents) => {\n      const fetchSettingPromises: Promise<void | undefined>[] = [];\n      const courses: Courses = {};\n      for (const content of contents) {\n        if (content.type === 'dir') {\n          fetchSettingPromises.push(\n            fetchSettingFromGitHub(content.path, courses)\n          );\n        }\n      }\n      Promise.all(fetchSettingPromises).then(() => setCourses(courses));\n    });\n\nexport const fetchTextFromGitHub = (setContent: (content: string) => void) => (\n  coursePath: string,\n  path: string\n): Promise<void> => {\n  const text = window.sessionStorage.getItem(`${coursePath}${path}/index.md`);\n  if (text) {\n    setContent(text);\n    return new Promise(() => {});\n  }\n  return fetchFileFromGitHub(`${GITHUB_API_REPO}${coursePath}${path}/index.md`)\n    .then((res: Response) => {\n      if (res.ok) {\n        return res.text();\n      }\n      throw new Error(res.statusText);\n    })\n    .then((text: string) => {\n      setContent(text);\n      window.sessionStorage.setItem(`${coursePath}${path}/index.md`, text);\n    });\n};\n\nexport const fetchSampleFromGitHub = (setSource: (sample: string) => void) => (\n  coursePath: string,\n  path: string\n): Promise<string> => {\n  const sample = window.sessionStorage.getItem(\n    `${coursePath}${path}/sample.py`\n  );\n  if (sample) {\n    setSource(sample);\n    return Promise.resolve(sample);\n  }\n  return fetchFileFromGitHub(`${GITHUB_API_REPO}${coursePath}${path}/sample.py`)\n    .then((res: Response) => {\n      if (res.ok) {\n        return res.text();\n      }\n      throw new Error(res.statusText);\n    })\n    .then((sample: string) => {\n      setSource(sample);\n      window.sessionStorage.setItem(`${coursePath}${path}/sample.py`, sample);\n      return sample;\n    });\n};\n\nexport const fetchSetting = (setCourse: (course: CourseShape) => void) => (\n  path: string\n): Promise<void> =>\n  loadFile(`/course/${path}/setting.json`)\n    .then((s: string) => {\n      return JSON.parse(s);\n    })\n    .then((course: CourseShape) => {\n      setCourse(course);\n    })\n    .catch((msg: string) => {\n      console.log(`ERR ${msg}`);\n    });\n\nexport const fetchContent = (setContent: (content: string) => void) => (\n  coursePath: string,\n  path: string\n): Promise<void> =>\n  loadFile(`/course/${coursePath}/${path}/index.md`).then((content: string) =>\n    setContent(content)\n  );\n\nexport const fetchSample = (setSource: (source: string) => void) => (\n  coursePath: string,\n  path: string\n): Promise<string> => {\n  const sample = window.sessionStorage.getItem(\n    `/course/${coursePath}/${path}/sample.py`\n  );\n  if (sample) {\n    setSource(sample);\n    return new Promise(() => sample);\n  }\n  return loadFile(`/course/${coursePath}/${path}/sample.py`).then(\n    (sample: string) => {\n      setSource(sample);\n      return sample;\n    }\n  );\n};\n\nexport const fetchCourses = (setCourses: (courses: Courses) => void) => {\n  const courses: Courses = {};\n  const get_course: Promise<void>[] = ['NLP'].map((courseName: string) =>\n    loadFile(`/course/${courseName}/setting.json`)\n      .then((s: string) => JSON.parse(s))\n      .then((course: CourseShape) => {\n        courses[courseName] = course;\n      })\n  );\n  Promise.all(get_course).then(() => setCourses(courses));\n};\n","import { PuppyVM as Puppy } from '@playpuppy/puppy2d';\nimport { OutputEvent } from '@playpuppy/puppy2d/dist/events';\n\nexport type StringElement = {\n  color?: string;\n  backgroundColor?: string;\n  value: string;\n};\n\nexport type ConsoleValue = StringElement[][];\n\nexport const resize = (puppy: Puppy | null) => (w: number, h: number) => {\n  if (puppy) {\n    return puppy.resize(w, h);\n  } else {\n    return;\n  }\n};\n\nexport const play = (puppy: Puppy | null) => (source: string) => () => {\n  if (puppy && puppy.load(source)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const fullscreen = (puppy: Puppy | null) => () => {\n  if (puppy) {\n    const canvas = puppy.render!.canvas;\n    if (canvas) {\n      // FIXME\n      if (canvas['webkitRequestFullscreen']) {\n        canvas['webkitRequestFullscreen'](); // Chrome15+, Safari5.1+, Opera15+\n      } else if (canvas['mozRequestFullScreen']) {\n        canvas['mozRequestFullScreen'](); // FF10+\n      } else if (canvas['msRequestFullscreen']) {\n        canvas['msRequestFullscreen'](); // IE11+\n      } else if (canvas['requestFullscreen']) {\n        canvas['requestFullscreen'](); // HTML5 Fullscreen API仕様\n      } else {\n        // alert('ご利用のブラウザはフルスクリーン操作に対応していません');\n        return;\n      }\n    }\n  }\n};\n\nexport const initConsole = (\n  setConsoleValue: (action: React.SetStateAction<ConsoleValue>) => void,\n  settingAction: {\n    AUTO_PLAY: React.Dispatch<React.SetStateAction<boolean>>;\n    DEBUG: React.Dispatch<React.SetStateAction<boolean>>;\n  },\n  puppy: Puppy | null\n) => {\n  if (puppy) {\n    const appendLine = (stringElements: StringElement[]) =>\n      setConsoleValue(prev => prev.concat([stringElements]));\n    puppy.addEventListener('stdout', (e: OutputEvent) => {\n      const stringElements: StringElement[] = [];\n      stringElements.push({\n        value: e.text,\n      });\n      appendLine(stringElements);\n    });\n    puppy.addEventListener('stderr', (e: OutputEvent) => {\n      const stringElements: StringElement[] = [];\n      stringElements.push({\n        value: e.text,\n        color: 'red',\n      });\n      appendLine(stringElements);\n    });\n    // puppy.addEventListener('action', (e: ActionEvent) => {\n    //   const stringElements: StringElement[] = [];\n    //   stringElements.push({\n    //     value: `> Puppy ${e.type} ${e.action}`,\n    //   });\n    //   appendLine(stringElements);\n    // });\n    const os = puppy.os;\n    os.addEventListener(\n      'changed',\n      (e: {\n        key: string;\n        value: string;\n        oldValue: string;\n        env: { [key: string]: any };\n      }) => {\n        const stringElements: StringElement[] = [];\n        if (e.key in settingAction) {\n          settingAction[e.key](e.value === 'true');\n        }\n        stringElements.push({\n          value: `> The env value of key \"${e.key}\" was changed to \"${e.value}\" from \"${e.oldValue}\". \\n`,\n        });\n        appendLine(stringElements);\n      }\n    );\n  }\n};\n","export const callKoinu = (NLPSymbol: string) =>\n  fetch(`http://localhost:8888/api/option/${NLPSymbol}`, {\n    method: 'POST',\n  }).then((res: Response) => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n","import {\n  editor,\n  languages,\n  Range,\n  CancellationToken,\n  Position,\n  MarkerSeverity,\n} from 'monaco-editor';\nimport { callKoinu } from './koinu';\nimport { ErrorLog, PuppyVM } from '@playpuppy/puppy2d';\nimport { messagefy } from '@playpuppy/puppy2d/dist/lang/code';\n\nexport type CodeEditor = editor.IStandaloneCodeEditor;\nexport type ContentChangedEvent = editor.IModelContentChangedEvent;\n\neditor.defineTheme('error', {\n  base: 'vs',\n  inherit: true,\n  rules: [],\n  colors: {\n    'editor.background': '#ffEEEE',\n  },\n});\n\nlanguages.registerCodeActionProvider('python', {\n  provideCodeActions: (\n    model: editor.ITextModel,\n    range: Range,\n    context: languages.CodeActionContext,\n    _token: CancellationToken\n  ) => {\n    const codeActions: Promise<languages.CodeAction>[] = [];\n    for (const mk of context.markers) {\n      switch (mk.code) {\n        case 'NLKeyValues': {\n          const NLPSymbol = mk.source;\n          if (NLPSymbol) {\n            codeActions.push(\n              callKoinu(NLPSymbol).then(json => {\n                console.log(json);\n                const key = Object.keys(json)[0];\n                let text = '';\n                if (key == 'shape') {\n                  text = json[key];\n                } else if (key == 'color') {\n                  text = `fillStyle=\"${json[key]}\"`;\n                } else {\n                  text = `${key}=${\n                    typeof json[key] == 'string' ? `\"${json[key]}\"` : json[key]\n                  }`;\n                }\n                return {\n                  title: `もしかして「${text}」ですか？`,\n                  edit: {\n                    edits: [\n                      {\n                        edits: [\n                          {\n                            range,\n                            text,\n                          },\n                        ],\n                        resource: model.uri,\n                      },\n                    ],\n                  },\n                  kind: 'quickfix',\n                  isPreferred: true,\n                };\n              })\n            );\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n    return Promise.all(codeActions);\n  },\n});\n\nlanguages.registerCompletionItemProvider('python', {\n  provideCompletionItems: (\n    model: editor.ITextModel,\n    position: Position,\n    _context: languages.CompletionContext,\n    _token\n  ) => {\n    const wordInfo = model.getWordUntilPosition(position);\n    const range = new Range(\n      position.lineNumber,\n      wordInfo.startColumn,\n      position.lineNumber,\n      wordInfo.endColumn\n    );\n    const math = [\n      'pi',\n      'sin',\n      'cos',\n      'tan',\n      'sqrt',\n      'log',\n      'log10',\n      'pow',\n      'hypot',\n      'gcd',\n    ];\n    const python = ['input', 'print', 'len', 'range', 'int', 'float', 'str'];\n    const random = ['random'];\n    const matter = ['World', 'Circle', 'Rectangle', 'Polygon', 'Label'];\n    const parameters = [\n      'width',\n      'height',\n      'isStatic',\n      'restitution',\n      'fillStyle',\n      'image',\n      'strokeStyle',\n      'lineWidth',\n    ];\n\n    const suggestions: languages.CompletionItem[] = [];\n\n    math.map(label => {\n      suggestions.push({\n        label,\n        kind: languages.CompletionItemKind.Function,\n        insertText: `${label}(\\${1})`,\n        insertTextRules: languages.CompletionItemInsertTextRule.InsertAsSnippet,\n        range,\n      });\n    });\n\n    python.map(label => {\n      suggestions.push({\n        label,\n        kind: languages.CompletionItemKind.Function,\n        insertText: `${label}(\\${1})`,\n        insertTextRules: languages.CompletionItemInsertTextRule.InsertAsSnippet,\n        range,\n      });\n    });\n\n    random.map(label => {\n      suggestions.push({\n        label,\n        kind: languages.CompletionItemKind.Function,\n        insertText: `${label}(\\${1})`,\n        insertTextRules: languages.CompletionItemInsertTextRule.InsertAsSnippet,\n        range,\n      });\n    });\n\n    matter.map(label => {\n      suggestions.push({\n        label,\n        kind: languages.CompletionItemKind.Constructor,\n        insertText: `${label}(\\${1})`,\n        insertTextRules: languages.CompletionItemInsertTextRule.InsertAsSnippet,\n        range,\n      });\n    });\n\n    parameters.map(label => {\n      suggestions.push({\n        label,\n        kind: languages.CompletionItemKind.Property,\n        insertText: `${label}=`,\n        range,\n      });\n    });\n    return { suggestions: suggestions };\n  },\n});\n\nlanguages.register({ id: 'puppyConsoleLanguage' });\n\nlanguages.setMonarchTokensProvider('puppyConsoleLanguage', {\n  tokenizer: {\n    root: [[/\"[^\"]*\"/, 'string']],\n  },\n});\n\nconst zenkaku =\n  '[！　”＃＄％＆’（）＊＋，－．／：；＜＝＞？＠［＼￥］＾＿‘｛｜｝～￣' +\n  'ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ' +\n  'ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ' +\n  '１２３４５６７８９０' +\n  '｡｢｣､･ｦｧｨｩｪｫｬｭｮｯｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾉﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜﾝﾞﾟ]';\n\nconst checkZenkaku = (\n  codeEditor: CodeEditor,\n  decos: string[],\n  setDecos: (decos: string[]) => void\n) => {\n  const zenkakuRanges = codeEditor\n    .getModel()!\n    .findMatches(zenkaku, true, true, false, null, false);\n  const _decos: editor.IModelDeltaDecoration[] = zenkakuRanges.map(\n    (match: editor.FindMatch) => ({\n      range: match.range,\n      options: { inlineClassName: 'zenkakuClass' },\n    })\n  );\n  setDecos(codeEditor.deltaDecorations(decos, _decos));\n};\n\nexport const onChange = (\n  codeEditor: CodeEditor | null,\n  setSource: (source: string) => void,\n  decos: string[],\n  setDecos: (decos: string[]) => void,\n  puppy: PuppyVM | null,\n  codeChangeTimer: NodeJS.Timer | null,\n  setCodeChangeTimer: React.Dispatch<React.SetStateAction<NodeJS.Timer | null>>\n) => (source: string, _event: editor.IModelContentChangedEvent) => {\n  if (codeEditor) {\n    checkZenkaku(codeEditor, decos, setDecos);\n  }\n  setSource(source);\n  if (codeChangeTimer) {\n    clearTimeout(codeChangeTimer);\n  }\n  if (puppy) {\n    setCodeChangeTimer(\n      setTimeout(() => {\n        puppy.load(source, false);\n      }, 500)\n    );\n  }\n};\n\nexport const editorDidMount = (setEditor: (editor: CodeEditor) => void) => (\n  editor: CodeEditor\n) => {\n  setEditor(editor);\n};\n\nexport const fontPlus = (\n  fontSize: number,\n  setFontSize: (fontSize: number) => void\n) => () => {\n  setFontSize(fontSize + 3);\n};\n\nexport const fontMinus = (\n  fontSize: number,\n  setFontSize: (fontSize: number) => void\n) => () => {\n  setFontSize(Math.max(12, fontSize - 3));\n};\n\nexport const setModelMarkers = editor.setModelMarkers;\n\ntype LogType = 'error' | 'info' | 'warning' | 'hint';\n\nconst type2severity = (type: LogType) => {\n  switch (type) {\n    case 'error':\n      return MarkerSeverity.Error;\n    case 'info':\n      return MarkerSeverity.Info;\n    case 'warning':\n      return MarkerSeverity.Warning;\n    case 'hint':\n      return MarkerSeverity.Hint;\n  }\n};\n\nexport const ErrorLogs2Markers = (logs: ErrorLog[]): editor.IMarkerData[] =>\n  logs.map(log => ({\n    severity: type2severity(log.type as LogType),\n    startLineNumber: log.row + 1,\n    startColumn: log.col!,\n    endLineNumber: log.row! + 1,\n    endColumn: log.col! + log.len!,\n    code: log.key,\n    source: log.subject ? log.subject : '',\n    message: messagefy(log),\n  }));\n\nexport const setErrorLogs = (codeEditor: CodeEditor | null) => (\n  type: LogType\n) => (logs: ErrorLog[]) => {\n  if (codeEditor) {\n    setModelMarkers(codeEditor.getModel()!, type, ErrorLogs2Markers(logs));\n  }\n};\n\nexport const setCodeHighLight = (\n  setHighLight: React.Dispatch<React.SetStateAction<string[]>>,\n  codeEditor: CodeEditor\n) => (startLineNum: number, endLineNum: number) => {\n  setHighLight(hl =>\n    codeEditor.deltaDecorations(hl, [\n      {\n        range: new Range(startLineNum, 1, endLineNum, 1),\n        options: { isWholeLine: true, className: 'code-highlight' },\n      },\n    ])\n  );\n};\n\nexport const resetCodeHighLight = (\n  setHighLight: React.Dispatch<React.SetStateAction<string[]>>,\n  codeEditor: CodeEditor\n) => () => {\n  setHighLight(hl => codeEditor.deltaDecorations(hl, []));\n};\n","import { PuppyVM } from '@playpuppy/puppy2d';\n\nexport const submitCommand = (puppy: PuppyVM | null) => (cmd: string) => {\n  if (puppy) {\n    const os = puppy.os;\n    const splited = cmd.split(' ');\n    const command = splited[0];\n    const args = splited.slice(1);\n    os.exec(command, args);\n  }\n};\n","export class AutoPlayer {\n  private isRun = false;\n\n  private run(func: () => void) {\n    func();\n    setTimeout(() => {\n      if (this.isRun) {\n        this.run(func);\n      }\n    }, 8000);\n  }\n\n  public play(func: () => void) {\n    if (this.isRun) {\n      this.isRun = false;\n    } else {\n      this.isRun = true;\n      this.run(func);\n    }\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Header from './components/Header/Header';\nimport Version from './components/Version/Version';\nimport Setting from './components/Setting/Setting';\nimport PuppyScreen from './components/PuppyScreen/PuppyScreen';\nimport Editor from './components/Editor/Editor';\nimport Course from './components/Course/Course';\nimport { QueryParams } from './index';\nimport {\n  Courses,\n  CourseShape,\n  fetchTextFromGitHub,\n  fetchSampleFromGitHub,\n  fetchCoursesFromGitHub,\n} from './logic/course';\nimport { PuppyOS, PuppyVM } from '@playpuppy/puppy2d';\nimport { LineEvent, ActionEvent } from '@playpuppy/puppy2d/dist/events';\nimport {\n  play as puppyplay,\n  fullscreen,\n  resize,\n  initConsole,\n  ConsoleValue,\n} from './logic/puppy';\nimport {\n  onChange,\n  editorDidMount,\n  fontMinus,\n  fontPlus,\n  CodeEditor,\n  setErrorLogs,\n  setCodeHighLight,\n  resetCodeHighLight,\n} from './logic/editor';\nimport { submitCommand } from './logic/setting';\nimport { AutoPlayer } from './logic/autoplay';\n\ntype AppProps = { qs: QueryParams; hash: string };\n\nconst App: React.FC<AppProps> = (props: AppProps) => {\n  const coursePath = props.qs.course ? props.qs.course : 'course/TronShow';\n  const page = props.hash !== '' ? parseInt(props.hash.substr(1)) : 0;\n  const [courses, setCourses] = useState({} as Courses);\n  const [isShowVersion, setIsShowVersion] = useState(false);\n  const [isCourseVisible, setIsCourseVisible] = useState(false);\n  const [course, setCourse] = useState({ title: '', list: [] } as CourseShape);\n  const [courseContent, setCourseContent] = useState('');\n  const [puppy, setPuppy] = useState(null as PuppyVM | null);\n  const [source, setSource] = useState('');\n  const [editorTheme, setEditorTheme] = useState('vs');\n  const [editorFontSize, setEditorFontSize] = useState(24);\n  const [codeEditor, setCodeEditor] = useState(null as CodeEditor | null);\n  const [decos, setDecos] = useState([] as string[]);\n  const [isShowSetting, setIsShowSetting] = useState(false);\n  const [settingCommand, setSettingCommand] = useState('');\n  const [isConsoleVisible, setIsConsoleVisible] = useState(false);\n  const [consoleValue, setConsoleValue] = useState([] as ConsoleValue);\n  const [isAutoPlay, setIsAutoPlay] = useState(false);\n  const [isDebug, setIsDebug] = useState(false);\n  const [autoPlayer, _setAutoPlayer] = useState(new AutoPlayer());\n  const [_highlight, setHighLight] = useState([] as string[]);\n  const [codeChangeTimer, setCodeChangeTimer] = useState(\n    null as NodeJS.Timer | null\n  );\n\n  const autoPlayFunc = () => {\n    const page =\n      window.location.hash !== ''\n        ? parseInt(window.location.hash.substr(1))\n        : 0;\n    window.location.hash = `#${page === course.list.length - 1 ? 0 : page + 1}`;\n  };\n  const play = (puppy: PuppyVM | null) => (source: string) => () => {\n    if (course.list.length !== 0) {\n      sessionStorage.setItem(\n        `${coursePath}${course.list[page].path}/sample.py`,\n        source\n      );\n    }\n    setConsoleValue([]);\n    if (codeEditor) {\n      codeEditor.setSelection({\n        startColumn: 0,\n        endColumn: 0,\n        startLineNumber: 0,\n        endLineNumber: 0,\n      });\n    }\n    if (puppyplay(puppy)(source)()) {\n      setEditorTheme('vs');\n    } else {\n      setEditorTheme('error');\n    }\n  };\n\n  useEffect(() => {\n    fetchCoursesFromGitHub(setCourses);\n    const puppyElement = document.getElementById('puppy-screen');\n    if (puppyElement) {\n      const puppyOS = new PuppyOS();\n      const puppy = puppyOS.newPuppyVM(puppyElement);\n      setPuppy(puppy);\n    }\n  }, []);\n  useEffect(() => {\n    if (puppy) {\n      puppy.addEventListener('error', setErrorLogs(codeEditor)('error'));\n      puppy.addEventListener('warning', setErrorLogs(codeEditor)('warning'));\n      puppy.addEventListener('info', setErrorLogs(codeEditor)('info'));\n    }\n  }, [puppy, codeEditor]);\n  useEffect(() => {\n    if (puppy && codeEditor) {\n      puppy.addEventListener('line', (e: LineEvent) => {\n        setCodeHighLight(setHighLight, codeEditor)(e.row + 1, e.row + 1);\n      });\n      puppy.addEventListener('action', (e: ActionEvent) => {\n        if (e.action == 'end' && e.type == 'run') {\n          resetCodeHighLight(setHighLight, codeEditor)();\n        }\n      });\n    }\n  }, [puppy, codeEditor, setHighLight]);\n  useEffect(() => {\n    initConsole(\n      setConsoleValue,\n      { AUTO_PLAY: setIsAutoPlay, DEBUG: setIsDebug },\n      puppy\n    );\n    if (puppy) {\n      setIsAutoPlay(puppy.os.getenv('AUTO_PLAY', false) === 'true');\n      setIsDebug(puppy.os.getenv('DEBUG', false) === 'true');\n    }\n  }, [puppy]);\n  useEffect(() => {\n    if (courses[coursePath]) {\n      setCourse(courses[coursePath]);\n    }\n  }, [coursePath, courses]);\n  useEffect(() => {\n    if (puppy) {\n      // const appendLine = (stringElements: StringElement[]) =>\n      //   setConsoleValue(prev => prev.concat([stringElements]));\n      // if (isDebug) {\n      //   puppy.addEventListener('action', (e: ActionEvent) => {\n      //     const stringElements: StringElement[] = [];\n      //     stringElements.push({\n      //       value: `> Puppy ${e.type} ${e.action}`,\n      //     });\n      //     appendLine(stringElements);\n      //   });\n      // } else {\n      //   puppy.resetEventListener('action');\n      // }\n    }\n  }, [isDebug, puppy]);\n\n  return (\n    <div className=\"App\">\n      <Container className=\"container\">\n        <Header\n          courses={courses}\n          setIsShowVersion={setIsShowVersion}\n          setIsShowSetting={() => setIsShowSetting(true)}\n        />\n        <Version show={isShowVersion} setShow={setIsShowVersion} />\n        <Setting\n          show={isShowSetting}\n          setShow={setIsShowSetting}\n          value={settingCommand}\n          setValue={setSettingCommand}\n          submitValue={submitCommand(puppy)}\n        />\n        <Row id=\"main-row\">\n          <Col id=\"left-col\" xs={6}>\n            <Course\n              course={course}\n              coursePath={coursePath}\n              page={page}\n              content={courseContent}\n              visible={isCourseVisible}\n              play={play(puppy)}\n              fetchContent={fetchTextFromGitHub(setCourseContent)}\n              fetchSample={fetchSampleFromGitHub(setSource)}\n            />\n            <PuppyScreen\n              isCourseVisible={isCourseVisible}\n              isConsoleVisible={isConsoleVisible}\n              setIsCourseVisible={setIsCourseVisible}\n              setIsConsoleVisible={setIsConsoleVisible}\n              consoleValue={consoleValue}\n              play={\n                isAutoPlay\n                  ? () => autoPlayer.play(autoPlayFunc)\n                  : play(puppy)(source)\n              }\n              fullscreen={fullscreen(puppy)}\n              setSize={resize(puppy)}\n            />\n          </Col>\n          <Col id=\"right-col\" xs={6}>\n            <Editor\n              fontSize={editorFontSize}\n              theme={editorTheme}\n              source={source}\n              onChange={onChange(\n                codeEditor,\n                setSource,\n                decos,\n                setDecos,\n                puppy,\n                codeChangeTimer,\n                setCodeChangeTimer\n              )}\n              editorDidMount={editorDidMount(setCodeEditor)}\n              fontPlus={fontPlus(editorFontSize, setEditorFontSize)}\n              fontMinus={fontMinus(editorFontSize, setEditorFontSize)}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nexport type QueryParams = {\n  course?: string;\n};\n\nconst queryParser = (query: string) =>\n  query\n    .substr(1)\n    .split('&')\n    .reduce((obj, v) => {\n      const pair = v.split('=');\n      obj[pair[0]] = pair[1];\n      return obj;\n    }, {});\n\nReactDOM.render(\n  <Router>\n    <Route\n      render={props => (\n        <App\n          qs={queryParser(props.location.search)}\n          hash={props.location.hash}\n        />\n      )}\n    />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}